environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\appveyor\\run_with_env.cmd"
  matrix:
    # Important remark: We need to use VS 2017 for compiling spherical-geometry
    # for python 3.5 -> 3.7 on any architectures, whether it is 64 or 32 bits.
    # Nightly 64-bit MSVC
    - channel: nightly
      target: x86_64-pc-windows-msvc
      PYTHON: "C:\\Python27-x64"
      PYTHON_VERSION: "2.7.x"
      PYTHON_ARCH: "64"
    - channel: nightly
      target: x86_64-pc-windows-msvc
      PYTHON: "C:\\Python36-x64"
      PYTHON_VERSION: "3.6.x"
      PYTHON_ARCH: "64"
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    - channel: nightly
      target: x86_64-pc-windows-msvc
      PYTHON: "C:\\Python37-x64"
      PYTHON_VERSION: "3.7.x"
      PYTHON_ARCH: "64"
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017

install:
  # Install cargo. See: https://github.com/starkat99/appveyor-rust/blob/master/appveyor.yml
  - appveyor DownloadFile https://win.rustup.rs/ -FileName rustup-init.exe
  - rustup-init -yv --default-toolchain nightly --default-host %target%
  - set PATH=%PATH%;%USERPROFILE%\.cargo\bin
  - rustc -vV
  - cargo -vV
  # Set the path so that the good python version is chosen
  - pip install cibuildwheel==0.10.0
  - set PATH=%PYTHON%;%PATH%
  - set PATH=%PYTHON%\\Scripts;%PATH%

build_script:
  # Install python dependencies for compiling
  # the dynamic library and run the tests
  - "%PYTHON%\\python.exe -m pip install -r requirements/contributing.txt"
  # Compile the dynamic library (.pyd on Windows env)
  - "%PYTHON%\\python.exe -m pip install setuptools setuptools_rust"
  - "%PYTHON%\\python.exe setup.py build_rust"
  # Copy the generated library to the python files location
  - xcopy "build\lib\mocpy\*.pyd" mocpy /sy

test_script:
  - "%PYTHON%\\python.exe -m pytest -v mocpy --cov-report=term --cov=mocpy"
  # Test docs build:
  - cd docs
  # Execute the tests found in the doc
  - make doctest

