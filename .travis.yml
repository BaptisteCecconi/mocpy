# Travis-ci config. Starting point was this:
# https://conda.io/docs/user-guide/tasks/use-conda-with-travis-ci.html
dist: xenial
language: python

env:
  global:
    - TWINE_USERNAME=bmatthieu3

# Define the order of the stages
stages:
  - test
  # Stage reponsible for building and publishing the wheels
  # to PyPI. Architecture supported:
  # - manylinux1_x86_64 py3.5->3.7
  # - osx py3.5->3.7
  - name: deploy
    if: tag IS present

addons:
  apt:
    update: true

jobs:
  include:
    - stage: test
      name: "Python=3.5 linux x86_64"
      os: linux
      python: 3.5
      install:
        # Install Rust compiler
        - curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain nightly -y
        - export PATH="$HOME/.cargo/bin:$PATH"
        # Install the dependencies for running the test and building the docs
        - pip install -r requirements/contributing.txt
        - pip install setuptools setuptools_rust
      script: ./travis/testing.sh
    - name: "Python=3.6 linux x86_64"
      os: linux
      python: 3.6
      install:
        # Install Rust compiler
        - curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain nightly -y
        - export PATH="$HOME/.cargo/bin:$PATH"
        # Install the dependencies for running the test and building the docs
        - pip install -r requirements/contributing.txt
        - pip install setuptools setuptools_rust
      script: ./travis/testing.sh
    - name: "Python=3.7 linux x86_64"
      os: linux
      python: 3.7
      install:
        # Install Rust compiler
        - curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain nightly -y
        - export PATH="$HOME/.cargo/bin:$PATH"
        # Install the dependencies for running the test and building the docs
        - pip install -r requirements/contributing.txt
        - pip install setuptools setuptools_rust
      script: ./travis/testing.sh
    - name: "Python=3.7 OSX"
      os: osx
      python: 3.7
      install:
        # Install Rust compiler
        - curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain nightly -y
        - export PATH="$HOME/.cargo/bin:$PATH"
        # Install the dependencies for running the test and building the docs
        - pip install -r requirements/contributing.txt
        - pip install setuptools setuptools_rust
      script: ./travis/testing.sh
    - name: "Python=3.7 Building docs"
      os: linux
      python: 3.7
      install:
        # Install Rust compiler
        - curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain nightly -y
        - export PATH="$HOME/.cargo/bin:$PATH"
        # Install the dependencies for running the test and building the docs
        - pip install -r requirements/contributing.txt
        - pip install setuptools setuptools_rust
      script:
        # Test docs build:
        - cd docs
        - make html
        # Execute the tests found in the doc
        - make doctest
        - cd ..

# Deployment and upload to PyPI if a commit is tagged and only on the master branch
# https://docs.travis-ci.com/user/deployment/pypi/#deploying-tags
deploy:
  provider: pypi
  user: "bmatthieu3"
  # Encryption of the password 
  # https://docs.travis-ci.com/user/encryption-keys/
  password:
    secure: "ANSPnsNPAV3hqUG34IrPwc44qQlHw8VxyhdupzjSNi+pCVN8DIgPelVxocj89IhM5s4FyuGRjPOum+dUneKKRYWW7Yi0wK5nK0fp6DX97y/7JvxqZVAso0lZjzUvp6UVcYnyqpuwVE0es2oIZLS3BcX7p9+zr9K9Dy5k5SJrdppT2DmC5SguHE0RPT8Fx1IllKREnNqmFB6lhJsu9sdJ9QH14IdRGwNyhvK3tBAg+Sy/tsDb01LXNedU+wk/KzAc+ylKNoYMCyUizqx4Kqq+tKPPKSPMxCxUKV0ktAGRlgqAn/K+VXtwCBuD4dyvgWAG5u7+OBsE49tP2JMazTUHa6wcDq35XthXKqchp1+tljw8WCnisExEvDs5IEyWVlvW46v3kLPkmbCE1LUDwWlU0HnVfXCpbXHzv4Z5koMGRzWi98m64Z6t95NDM515j9vNHgEPnZXm9i/JDfHYGHEMmOZ1AXgVreQ1fwmh1+pmI7V6KOvNNNSghbVJH+hxNzXGtg12Q3qZANRj8V6hmM1PfrRBltS+r9sKdViUwQSycOSlyL6lkdaHtogbaEPIpGPq5obCFr21S+up4FJ48a0CCUZWdF2qMrbwhTSPquGCfQzU32EQnr8qb1Ol4NNjN84EIlHBhBCcAF157kl3JlFRHY8i38t87tAIHeU/gkEBmx0="
  # Upload a source and a wheel distribution
  distributions: "bdist_wheel"
  # Avoid the PyPI error message: HTTPError: 400 Client Error: File already exists.
  skip_existing: true
  on:
    tags: true