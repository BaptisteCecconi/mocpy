# Travis-ci config. Starting point was this:
# https://conda.io/docs/user-guide/tasks/use-conda-with-travis-ci.html
language: python

python:
  # We don't actually use the Travis Python, but this keeps it organized.
  - "2.7"
  # We only test with the oldest Python 3 version we support
  # Python is very good about backward compatibility,
  # so testing on newer ones is almost never useful.
  - "3.5"

addons:
  apt:
    update: true

install:  
  # Install Rust compiler
  - curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain nightly -y
  - export PATH="$HOME/.cargo/bin:$PATH"
  # Install the dependencies for running the test and building the docs
  - pip install -r requirements/contributing.txt
  - pip install setuptools setuptools_rust
  # PY2 WARN: Update pytest cov for python2 testing on travis
  - |
    if [ "$TRAVIS_PYTHON_VERSION" = "2.7" ]; then
      pip install -U pytest-cov
    fi

script:
  # Generate the dynamic library from the cdshealpix Rust crate.
  # This will download the crate from crates.io and build it first.
  - python setup.py build_rust
  # Move the dynamic lib to the python package folder
  - find build/ -name "*.so" -type f -exec cp {} ./mocpy \;
  - python -m pytest -v mocpy --cov-report=term --cov=mocpy
  # Test notebooks
  - pip install .
  # Install other dependencies for running the notebooks
  - pip install -U jupyter astroquery
  - python test_notebooks.py
  # Test docs build:
  - cd docs
  - make html
  # Execute the tests found in the doc
  - make doctest
  - cd ..

# Deployment and upload to PyPI if a commit is tagged and only on the master branch
# https://docs.travis-ci.com/user/deployment/pypi/#deploying-tags
deploy:
  provider: pypi
  user: "bmatthieu3"
  # Encryption of the password 
  # https://docs.travis-ci.com/user/encryption-keys/
  password:
    secure: "ANSPnsNPAV3hqUG34IrPwc44qQlHw8VxyhdupzjSNi+pCVN8DIgPelVxocj89IhM5s4FyuGRjPOum+dUneKKRYWW7Yi0wK5nK0fp6DX97y/7JvxqZVAso0lZjzUvp6UVcYnyqpuwVE0es2oIZLS3BcX7p9+zr9K9Dy5k5SJrdppT2DmC5SguHE0RPT8Fx1IllKREnNqmFB6lhJsu9sdJ9QH14IdRGwNyhvK3tBAg+Sy/tsDb01LXNedU+wk/KzAc+ylKNoYMCyUizqx4Kqq+tKPPKSPMxCxUKV0ktAGRlgqAn/K+VXtwCBuD4dyvgWAG5u7+OBsE49tP2JMazTUHa6wcDq35XthXKqchp1+tljw8WCnisExEvDs5IEyWVlvW46v3kLPkmbCE1LUDwWlU0HnVfXCpbXHzv4Z5koMGRzWi98m64Z6t95NDM515j9vNHgEPnZXm9i/JDfHYGHEMmOZ1AXgVreQ1fwmh1+pmI7V6KOvNNNSghbVJH+hxNzXGtg12Q3qZANRj8V6hmM1PfrRBltS+r9sKdViUwQSycOSlyL6lkdaHtogbaEPIpGPq5obCFr21S+up4FJ48a0CCUZWdF2qMrbwhTSPquGCfQzU32EQnr8qb1Ol4NNjN84EIlHBhBCcAF157kl3JlFRHY8i38t87tAIHeU/gkEBmx0="
  # Upload a source and a wheel distribution
  distributions: "bdist_wheel"
  # Avoid the PyPI error message: HTTPError: 400 Client Error: File already exists.
  skip_existing: true
  on:
    tags: true